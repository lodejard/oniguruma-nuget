# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
- job: Linux
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - script: |
      cd 3rdparty/oniguruma
      autoreconf -vfi
      ./configure
      make
    displayName: 'Build'
  - task: PublishPipelineArtifact@0
    displayName: 'Publish'
    inputs:
      artifactName: build-linux
      targetPath: '$(Build.SourcesDirectory)\\3rdparty\\oniguruma\\src\\.libs'

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: |
      DIR "C:\Program Files (x86)\Microsoft Visual Studio"
      DIR "C:\Program Files (x86)\Microsoft Visual Studio\Enterprise"
      call "C:\Program Files (x86)\Microsoft Visual Studio\Enterprise\2017\VC\Auxiliary\Build\vcvarsall.bat" x64
      mkdir $(Build.ArtifactStagingDirectory)\\win64
      cd $(Build.ArtifactStagingDirectory)\\win64
      $(Build.SourcesDirectory)\\3rdparty\\oniguruma\\make_win64.bat
    displayName: 'Build win64'
  - script: |
      call %VSINSTALLDIR%\\Auxiliary\\Build\\vcvarsall.bat x86
      mkdir $(Build.ArtifactStagingDirectory)\\win32
      cd $(Build.ArtifactStagingDirectory)\\win32
      $(Build.SourcesDirectory)\\3rdparty\\oniguruma\\make_win32.bat
    displayName: 'Build win32'

- job: MacOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - script: |
      echo Hello, world!
    displayName: 'Build'

