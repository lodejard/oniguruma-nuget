# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
- job: Linux
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - script: |
      cd 3rdparty/oniguruma
      autoreconf -vfi
      ./configure
      make
      make all-test
    displayName: 'build linux'

  - task: PublishPipelineArtifact@0
    displayName: 'publish linux'
    inputs:
      artifactName: build-linux
      targetPath: $(Build.SourcesDirectory)/3rdparty/oniguruma/src/.libs

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: build-win.cmd x64
    displayName: 'build win-x64'

  - task: PublishPipelineArtifact@0
    displayName: 'publish win-x64'
    inputs:
      artifactName: build-win-x64
      targetPath: $(Build.ArtifactStagingDirectory)/win-x64

  - script: build-win.cmd x86
    displayName: 'build win-x86'

  - task: PublishPipelineArtifact@0
    displayName: 'publish win-x86'
    inputs:
      artifactName: build-win-x86
      targetPath: $(Build.ArtifactStagingDirectory)/win-x86

- job: MacOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - script: echo unknown

- job: Package
  dependsOn:
  - Linux
  - Windows
  - MacOS
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: build-win-x64
      targetPath: $(System.ArtifactStagingDirectory)/win-x64
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: build-win-x86
      targetPath: $(System.ArtifactStagingDirectory)/win-x86
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: build-linux
      targetPath: $(System.ArtifactStagingDirectory)/linux
  
  - script: dotnet pack package -o $(System.ArtifactStagingDirectory)/packages
  
  - task: PublishPipelineArtifact@0
    displayName: 'publish packages'
    inputs:
      artifactName: packages
      targetPath: $(Build.ArtifactStagingDirectory)/packages

  - task: NuGetCommand@2
    displayName: 'push packages'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      command: push
      packagesToPush: $(Build.ArtifactStagingDirectory)/packages/*.nupkg;!$(Build.ArtifactStagingDirectory)/packages/*.symbols.nupkg
      nuGetFeedType: external
      externalEndpoint: myget-oniguruma
